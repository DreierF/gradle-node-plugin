import org.gradle.util.GradleVersion

plugins {
    id "com.github.node-gradle.node"
}

node {
    download = true
    workDir = file("build/node")
    pnpmVersion = '4.12.4'
}

task env(type: PnpxTask) {
    dependsOn pnpmInstall
    command = "print-env"
    args = ["PATH", "CUSTOM"]
    outputs.upToDateWhen {
        true
    }
}

task pwd(type: PnpxTask) {
    dependsOn pnpmInstall
    command = "jseval"
    args = ["console.log(`workingDirectory='\${process.cwd()}'`);"]
    outputs.upToDateWhen {
        true
    }
}

task version(type: PnpxTask) {
    dependsOn pnpmInstall
    command = "--version"
}

if (isPropertyEnabled("customEnv")) {
    def qualifier = "custom"
    env.environment = [CUSTOM: "${qualifier} value"]
}

if (isPropertyEnabled("ignoreExitValue")) {
    env.ignoreExitValue = true
}

if (isPropertyEnabled("notExistingCommand")) {
    env.command = "notExistingCommand"
}

if (isPropertyEnabled("customWorkingDir")) {
    pwd.workingDir = file("${project.buildDir}/customWorkingDirectory/")
}

if (isPropertyEnabled("outputFile")) {
    env.execOverrides {
        standardOutput = new FileOutputStream("${buildDir}/standard-output.txt")
    }
}

def isPropertyEnabled(String name) {
    if (GradleVersion.current() >= GradleVersion.version("6.6")) {
        return providers.systemProperty(name).forUseAtConfigurationTime().isPresent()
    }
    return System.properties[name] != null
}
